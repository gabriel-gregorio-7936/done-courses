https://reactnavigation.org/docs/getting-started

Install the required packages in your React Native project:
npm install @react-navigation/native


Installing dependencies into an Expo managed project​
npx expo install react-native-screens react-native-safe-area-context


Installing dependencies into a bare React Native project​
npm install react-native-screens react-native-safe-area-context

If you're on a Mac and developing for iOS, you need to install the pods (via Cocoapods) to complete the linking.
npx pod-install ios


https://reactnavigation.org/docs/stack-navigator/
npm install @react-navigation/stack


coding:
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import React from 'react'
import { StyleSheet, View, Text, Pressable } from 'react-native'

const Stack = createStackNavigator({navigation});
function ScreenA() {
  const onPressHandler = () => {
    navigation.navigate("Screen_B");
    navigation.replace("Screen_B");
  }
  return (
    <View style={styles.body}>
      <Text style={styles.text}>
        Screen A
      </Text>
      <Pressable
        onPress={onPressHandler}
        style={({pressed}) =>({backgroundColor: pressed ? '#ddd' : '#0f0'})}
      >
        <Text style={styles.text}>
          Go to Screen B
        </Text>
      </Pressable>
    </View>
  )
}

function ScreenB({navigation}) {
  const onPressHandler =  () => {
    navigation.navigate('Screen_A');
    navigation.goback();
  }
  return (
    <View style={styles.body}>
      <Text style={styles.text}>
        Screen B
      </Text>
      <Pressable
        onPress={onPressHandler}
        style={({pressed}) =>({backgroundColor: pressed ? '#ddd' : '#0f0'})}
      >
        <Text style={styles.text}>
          Go back to Screen A
        </Text>
      </Pressable>
    </View>
  )
}

function App () {
  return (
    <NavigationContainer>
      <Stack.Navigator
        screenOptions={{
          header: () => null
        }}
      >
        <Stack.Screen 
          name="Screen_A"
          component={ScreenA}
          options={{
            //header: () => null
          }}
        />
        <Stack.Screen 
          name="Screen_B"
          component={ScreenB}
        />
      </Stack.Navigator>
    </NavigationContainer>
  )
}

const styles = StyleSheet.create({
  body: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  text: {
    fontSize: 40,
    fontWeight: 'bold',
    margin: 10,
  }
})

export default App;