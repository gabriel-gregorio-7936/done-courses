You can import { ScrollView, RefreshControl } from 'react-native'; 

List:

import React, {useState} from 'react'
import { StyleSheet, View, Text, Button, Linking } from 'react-native'

function App() {

  const [Items, setItems] = useState([
    { key: 1, item: 'Item 1' },
    { key: 2, item: 'Item 2' },
    { key: 3, item: 'Item 3' },
    { key: 4, item: 'Item 4' },
    { key: 5, item: 'Item 5' },
    { key: 6, item: 'Item 6' },
    { key: 7, item: 'Item 7' },
    { key: 8, item: 'Item 8' },
  ])

  return (
    <View style={styles.body}>
      {
        Items.map((object) => {
          return (
            <View style={styles.item} key={object.key}>
              <Text styles={styles.text}>{object.item}</Text>
            </View>
          )
        })
      }
    </View>
  )
}

export default App;



ScrollView:

import React, {useState} from 'react'
import { StyleSheet, View, Text, Button, Linking } from 'react-native'
import { ScrollView } from 'react-native-gesture-handler'

function App() {

  const [Items, setItems] = useState([
    { key: 1, item: 'Item 1' },
    { key: 2, item: 'Item 2' },
    { key: 3, item: 'Item 3' },
    { key: 4, item: 'Item 4' },
    { key: 5, item: 'Item 5' },
    { key: 6, item: 'Item 6' },
    { key: 7, item: 'Item 7' },
    { key: 8, item: 'Item 8' },
  ])

  return (
    <View style={styles.body}>
      <ScrollView 
        horizontal={true}
      >
        {
          Items.map((object) => {
            return (
              <View style={styles.item} key={object.key}>
                <Text styles={styles.text}>{object.item}</Text>
              </View>
            )
          })
        }
      </ScrollView>
    </View>
  )
}

export default App;


RefreshControl:


import React, {useState} from 'react'
import { StyleSheet, View, Text, Button, Linking } from 'react-native'
import { RefreshControl, ScrollView } from 'react-native-gesture-handler'

function App() {

  const [Items, setItems] = useState([
    { key: 1, item: 'Item 1' },
    { key: 2, item: 'Item 2' },
    { key: 3, item: 'Item 3' },
    { key: 4, item: 'Item 4' },
    { key: 5, item: 'Item 5' },
    { key: 6, item: 'Item 6' },
    { key: 7, item: 'Item 7' },
    { key: 8, item: 'Item 8' },
  ])

  const [Refreshing, setRefreshing] = useState(false)
  const onRefresh = () => {
    setRefreshing(true);
    setItems([...Items, {key: 69, item: 'Item 69'}]);
    setRefreshing(false);
  }

  return (
    <View style={styles.body}>
      <ScrollView 
        horizontal={true}
        refreshControl={
          <RefreshControl 
            refreshing={ Refreshing }
            onRefresh={onRefresh}
            color={['#ff00ff']}
          />
        }
      >
        {
          Items.map((object) => {
            return (
              <View style={styles.item} key={object.key}>
                <Text styles={styles.text}>{object.item}</Text>
              </View>
            )
          })
        }
      </ScrollView>
    </View>
  )
}

export default App;